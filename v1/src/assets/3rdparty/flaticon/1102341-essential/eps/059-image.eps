%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.14.2 (http://cairographics.org)
%%CreationDate: Mon Sep  3 08:07:08 2018
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 3
%%BoundingBox: 0 0 512 512
%%EndComments
%%BeginProlog
save
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/pdfmark where { pop globaldict /?pdfmark /exec load put }
    { globaldict begin /?pdfmark /pop load def /pdfmark
    /cleartomark load def end } ifelse
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 0 0 512 512
%%EndPageSetup
q 0 0 512 512 rectclip q
q
432 512 m 80 512 l 35.84 511.945 0.055 476.16 0 432 c 0 80 l 0.055 35.84
 35.84 0.055 80 0 c 432 0 l 476.16 0.055 511.945 35.84 512 80 c 512 432 
l 511.949 476.16 476.16 511.945 432 512 c h
80 480 m 432 480 l 458.508 480 480 458.512 480 432 c 480 278.625 l 379.312
 379.312 l 373.062 385.559 362.938 385.559 356.688 379.312 c 232 254.625
 l 187.312 299.312 l 181.062 305.559 170.938 305.559 164.688 299.312 c 32
 166.625 l 32 432 l 32 458.508 53.492 480 80 480 c h
432 32 m 80 32 l 53.492 32 32 53.488 32 80 c 32 121.375 l 176 265.375 l
 324.688 116.688 l 327.688 113.688 331.758 112 336 112 c 400 112 l 400 144
 l 342.625 144 l 254.625 232 l 368 345.375 l 480 233.375 l 480 80 l 480 
53.492 458.508 32 432 32 c h
432 32 m W n
[0.698866 0 0 0.698866 0 5.498291] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.913725 0.243137 0.227451 ]
      /C1 [ 0.929412 0.407843 0.235294 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.929412 0.407843 0.235294 ]
      /C1 [ 0.952941 0.564706 0.247059 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.952941 0.564706 0.247059 ]
      /C1 [ 0.992157 0.780392 0.0470588 ]
      /N 1
   >>
   ]
   /Bounds [ 0.355 0.705 ]
   /Encode [ 1 1 3 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 366.307587 -6.7001 366.307587 835.235107 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
q
224 352 m 250.508 352 272 373.492 272 400 c 272 426.512 250.512 448 224
 448 c 197.488 448 176 426.512 176 400 c 176 373.492 197.492 352 224 352
 c h
224 416 m 232.836 416 240 408.836 240 400 c 240 391.164 232.836 384 224
 384 c 215.164 384 208 391.164 208 400 c 208 408.836 215.164 416 224 416
 c h
224 416 m W n
[0.698866 0 0 0.698866 0 5.498291] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.913725 0.243137 0.227451 ]
      /C1 [ 0.929412 0.407843 0.235294 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.929412 0.407843 0.235294 ]
      /C1 [ 0.952941 0.564706 0.247059 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.952941 0.564706 0.247059 ]
      /C1 [ 0.992157 0.780392 0.0470588 ]
      /N 1
   >>
   ]
   /Bounds [ 0.355 0.705 ]
   /Encode [ 1 1 3 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 320.519196 -6.7001 320.519196 835.235107 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
Q Q
showpage
%%Trailer
end restore
%%EOF
