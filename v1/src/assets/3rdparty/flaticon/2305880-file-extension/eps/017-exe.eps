%!PS-Adobe-3.0 EPSF-3.0
%%Creator: cairo 1.16.0 (https://cairographics.org)
%%CreationDate: Fri Nov 15 08:38:41 2019
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 3
%%BoundingBox: 48 12 336 372
%%EndComments
%%BeginProlog
50 dict begin
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox: 48 12 336 372
%%EndPageSetup
q 48 12 288 360 rectclip
1 0 0 -1 0 384 cm q
q
262.242 13.758 m 261.117 12.633 259.59 12 258 12 c 90 12 l 66.816 12.027
 48.027 30.816 48 54 c 48 330 l 48.027 353.184 66.816 371.973 90 372 c 294
 372 l 317.184 371.973 335.973 353.184 336 330 c 336 90 l 336 88.41 335.367
 86.883 334.242 85.758 c h
264 32.484 m 315.516 84 l 294 84 l 277.438 83.98 264.02 70.562 264 54 c
 h
90 24 m 252 24 l 252 54 l 252.027 77.184 270.816 95.973 294 96 c 324 96
 l 324 264 l 60 264 l 60 54 l 60.02 37.438 73.438 24.02 90 24 c h
294 360 m 90 360 l 73.438 359.98 60.02 346.562 60 330 c 60 276 l 324 276
 l 324 330 l 323.98 346.562 310.562 359.98 294 360 c h
138 300 m 138 312 l 144 312 l 147.312 312 150 314.688 150 318 c 150 321.312
 147.312 324 144 324 c 138 324 l 138 336 l 156 336 l 159.312 336 162 338.688
 162 342 c 162 345.312 159.312 348 156 348 c 132 348 l 128.688 348 126 345.312
 126 342 c 126 294 l 126 290.688 128.688 288 132 288 c 156 288 l 159.312
 288 162 290.688 162 294 c 162 297.312 159.312 300 156 300 c h
234 300 m 234 312 l 240 312 l 243.312 312 246 314.688 246 318 c 246 321.312
 243.312 324 240 324 c 234 324 l 234 336 l 252 336 l 255.312 336 258 338.688
 258 342 c 258 345.312 255.312 348 252 348 c 228 348 l 224.688 348 222 345.312
 222 342 c 222 294 l 222 290.688 224.688 288 228 288 c 252 288 l 255.312
 288 258 290.688 258 294 c 258 297.312 255.312 300 252 300 c h
209.367 296.684 m 198.707 318 l 209.367 339.316 l 210.094 340.742 210.219
 342.398 209.719 343.918 c 209.223 345.438 208.137 346.691 206.703 347.41
 c 205.273 348.125 203.617 348.238 202.102 347.727 c 200.586 347.215 199.34
 346.121 198.633 344.684 c 192 331.414 l 185.367 344.684 l 183.871 347.621
 180.285 348.797 177.336 347.324 c 174.391 345.852 173.184 342.273 174.633
 339.316 c 185.293 318 l 174.633 296.684 l 173.184 293.727 174.391 290.148
 177.336 288.676 c 180.285 287.203 183.871 288.379 185.367 291.316 c 192
 304.586 l 198.633 291.316 l 199.34 289.879 200.586 288.785 202.102 288.273
 c 203.617 287.762 205.273 287.875 206.703 288.59 c 208.137 289.309 209.223
 290.562 209.719 292.082 c 210.219 293.602 210.094 295.258 209.367 296.684
 c h
114 228 m 270 228 l 273.312 228 276 225.312 276 222 c 276 162 l 276 158.688
 273.312 156 270 156 c 264 156 l 264 138 l 264 134.688 261.312 132 258 132
 c 236.504 132 l 236.402 131.75 236.301 131.504 236.195 131.258 c 251.398
 116.059 l 253.742 113.715 253.742 109.918 251.398 107.574 c 234.426 90.602
 l 233.301 89.477 231.773 88.844 230.184 88.844 c 228.594 88.844 227.066
 89.477 225.941 90.602 c 210.742 105.801 l 210.496 105.695 210.246 105.594
 210 105.496 c 210 90 l 210 86.688 207.312 84 204 84 c 180 84 l 176.688 
84 174 86.688 174 90 c 174 105.496 l 173.754 105.598 173.504 105.699 173.258
 105.805 c 158.059 90.602 l 156.934 89.477 155.406 88.844 153.816 88.844
 c 152.227 88.844 150.699 89.477 149.574 90.602 c 132.602 107.574 l 130.258
 109.918 130.258 113.715 132.602 116.059 c 147.801 131.258 l 147.695 131.504
 147.594 131.75 147.496 132 c 126 132 l 122.688 132 120 134.688 120 138 
c 120 156 l 114 156 l 110.688 156 108 158.688 108 162 c 108 222 l 108 225.312
 110.688 228 114 228 c h
132 144 m 151.75 144 l 154.402 144 156.742 142.258 157.5 139.711 c 158.203
 137.344 159.152 135.051 160.324 132.879 c 161.59 130.543 161.172 127.656
 159.293 125.777 c 145.332 111.816 l 153.816 103.332 l 167.773 117.293 l
 169.652 119.168 172.543 119.59 174.875 118.324 c 177.051 117.148 179.344
 116.203 181.711 115.5 c 184.258 114.742 186 112.402 186 109.75 c 186 96
 l 198 96 l 198 109.75 l 198 112.402 199.742 114.742 202.289 115.5 c 204.656
 116.203 206.949 117.148 209.121 118.324 c 211.457 119.59 214.344 119.168
 216.223 117.293 c 230.184 103.332 l 238.668 111.816 l 224.707 125.773 l
 222.828 127.652 222.41 130.543 223.676 132.875 c 224.852 135.051 225.797
 137.344 226.5 139.711 c 227.258 142.258 229.598 144 232.25 144 c 252 144
 l 252 156 l 215.234 156 l 217.094 148.812 215.523 141.168 210.977 135.293
 c 206.434 129.422 199.426 125.984 192 125.984 c 184.574 125.984 177.566
 129.422 173.023 135.293 c 168.477 141.168 166.906 148.812 168.766 156 c
 132 156 l h
181.617 156 m 179.465 152.289 179.461 147.711 181.602 143.992 c 183.746
 140.277 187.711 137.984 192 137.984 c 196.289 137.984 200.254 140.277 202.398
 143.992 c 204.539 147.711 204.535 152.289 202.383 156 c h
120 168 m 264 168 l 264 216 l 120 216 l h
222 186 m 222 189.312 219.312 192 216 192 c 168 192 l 164.688 192 162 189.312
 162 186 c 162 182.688 164.688 180 168 180 c 216 180 l 219.312 180 222 182.688
 222 186 c h
222 186 m W n
[0.75 0 0 0.75 0 0] concat
/CairoFunction
<< /FunctionType 3
   /Domain [ 0 1 ]
   /Functions [
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.0705882 0.760784 0.913725 ]
      /C1 [ 0.768627 0.443137 0.929412 ]
      /N 1
   >>
   << /FunctionType 2
      /Domain [ 0 1 ]
      /C0 [ 0.768627 0.443137 0.929412 ]
      /C1 [ 0.964706 0.309804 0.34902 ]
      /N 1
   >>
   ]
   /Bounds [ 0.5 ]
   /Encode [ 1 1 2 { pop 0 1 } for ]
>>
def
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [ 256 496 256 16 ]
      /Extend [ true true ]
      /Function CairoFunction
   >>
shfill
Q
Q Q
showpage
%%Trailer
end
%%EOF
